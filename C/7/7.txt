1.   One of the oldest known encryption techniques is the Caesar cipher, attributed to Julius Caesar. It involves replacing each letter in a message with another letter that is a fixed number of positions later in the alphabet. (If the replacement would go past the letter Z, the cipher ¡§wraps around¡¨ to the beginning of the alphabet. For example, if each letter is replaced by the letter two positions after it, then Y would be replaced by A, and Z would be replaced by B.) 
 
Thus, the mechanism is that encrypted and the shift amount ( the number of positions by which letters should be shifted):

Enter message to be encrypted: Go ahead, make my day.
Enter shift amount (1-25): 3
Encrypted message: Jr dkhdg, pdnh pb gdb.
 
Notice that it can decrypt a message if the user enters 26 minus the original key:
 
Enter message to be encrypted: Jr dkhdg, pdnh pb gdb.
Enter shift amount (1-25): 23
Encrypted message: Go ahead, make my day.
 
You may assume that the message does not exceed 80 characters. Characters other than letters should be left unchanged. Lower-case letters remain lower-case when encrypted, and upper-case letters remain upper-case.
 
Write a program that prompts the user to enter the name of a file containing the message to be encrypted:

Enter name of a file to be encrypted: message.txt
Enter shift amount (1-25): 3

The program then writes the encrypted message to a file with the same name but an added extension of .enc. In this example, the original file name is message.txt, so the encrypted message will be stored in a file named message.txt.enc. There¡¦s no limit on the size of the file to be encrypted or on the length of each line in the file.
 
Hint: To handle the wrap-around problem, use the expression ((ch¡V¡¥A¡¦)+n)%26+¡¥A¡¦ to calculate the encrypted version of an upper-case letter, where ch stores the letter and n stores the shift amount. (You¡¦ll need a similar expression for lower-case letters.)
 
 
2.   Write a program that reads a series of phone numbers from a file and displays them in a standard format. Each line of the file will contain a single phone number, but the numbers may be in a variety of formats. You may assume that each line contains 10 digits, possibly mixed with other characters (which should be ignored). For example, suppose that the file contains the following lines:
404.817.6900
(215)686-1776
312-746-6000
877 275 5273
6173434200
The output of the program should have the following appearance:
(404)817-6900
(215)686-1776
(312)746-6000
(877)275-5273
(617)343-4200
Have the program obtain the file name from the command line.
